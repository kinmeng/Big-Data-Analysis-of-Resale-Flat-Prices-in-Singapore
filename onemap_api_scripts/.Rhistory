library(reticulate)
#conda_create("resale_env") --> created environment
use_condaenv("resale_env")
#conda_create("resale_env") --> created environment
use_condaenv("resale_env")
# install python packages
conda_install("resale_env", c("requests","numpy","pandas"))
reticulate::repl_python()
import pandas as pd
import pandas as pd
import requests
df = pd.read_csv("resale_flat_prices.csv")
df.info()
df.head()
#append
df['unique_add'] = df['block'] + ' ' + df['street_name']
df['unique_add']
#obtain unique addresses only
df['unique_add'].unique()
#count number of unique addresses: 9k+
#count number of unique addresses: 9k+
df['unique_add'].nunique()
df['unique_add'].nunique()
#head of unique addresses
#head of unique addresses
df['unique_add'].head()
#sample test with one address
#sample test with one address
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}&pageNum={}".format('310C ANG MO KIO AVE 1','Y','Y',1)
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}&pageNum={}".format('310C ANG MO KIO AVE 1','Y','Y',1)
result= requests.get(base_url+path)
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}&pageNum={}".format('310C ANG MO KIO AVE 1','Y','Y',1)
result= requests.get(base_url+path)
print(result.json()['results'][0])
#Iterating through each row of the dataframe
df= df[['unique_add']]
sample_df = df[1:3]
sample_df.head()
def latlon(sample_df_row):
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str(sample_df_row[0]),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
else:
x, y = 'NULL','NULL'
return x,y
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(latlon, axis=1)
sample_df
df= df[['unique_add']]
sample_df = df[1:200]
sample_df.head()
df = pd.read_csv("resale_flat_prices.csv")
df.info()
df.head()
df= df[['unique_add']]
sample_df = df[1:200]
df['unique_add'] = df['block'] + ' ' + df['street_name']
df['unique_add']
#obtain unique addresses only
df['unique_add'].unique()
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}&pageNum={}".format('310C ANG MO KIO AVE 1','Y','Y',1)
result= requests.get(base_url+path)
print(result.json()['results'][0])
df= df[['unique_add']]
sample_df = df[1:200]
sample_df.head()
def latlon(sample_df_row):
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str(sample_df_row[0]),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
else:
x, y = 'NULL','NULL'
return x,y
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(latlon, axis=1)
sample_df
def latlon(sample_df_row):
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str(sample_df_row[0]),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
else:
x, y = 'NULL','NULL'
return x,y
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(latlon, axis=1)
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(latlon, axis=1)
sample_df
View(sample_df)
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}&pageNum={}".format('586 ANG MO KIO AVE 3','Y','Y',1)
result= requests.get(base_url+path)
print(result.json())
sample_df = df[1:50]
sample_df.head()
def latlon(sample_df_row):
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str(sample_df_row[0]),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
else:
print(result.json())
x, y = 'NULL','NULL'
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(latlon, axis=1)
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(latlon, axis=1)
sample_df
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}&pageNum={}".format('204,BEDOK NTH ST 1','Y','Y',1)
result= requests.get(base_url+path)
print(result.json())
def fn():
x,y = 'NULL', 'NULL'
return x,y
print(fn())
def fn():
x,y = 125, 126
return x,y
print(fn())
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str(sample_df_row[0]),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
print(x,y)
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str('401 BEDOK NORTH AVENUE 3'),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
print(x,y)
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str('ANG MO KIO AVE 3'),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
print(x,y)
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str('604 ANG MO KIO AVE 3'),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
print(x,y)
def test():
return 1,2
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(test, axis=1)
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(test)
sample_df
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= sample_df.apply(test, axis=0)
sample_df
sample_df.loc[:,'Lat'] = sample_df.apply(test, axis=0)
sample_df
df= df[['unique_add']]
sample_df = df[1:50]
sample_df.head()
def latlon(sample_df_row):
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str(sample_df_row[0]),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
else:
print(result.json())
x, y = 'NULL','NULL'
return x,y
#def test():
#  return 1,2
#sample_df.loc[:,'Lat'] = sample_df.apply(test, axis=0)
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= zip(*sample_df['unique_add'].apply(test))
sample_df
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= zip(*sample_df['unique_add'].apply(latlon))
sample_df.loc[:,'Lat'], sample_df.loc[:,'Lon']= zip(*sample_df['unique_add'].apply(latlon))
sample_df
import pandas as pd
import requests
df = pd.read_csv("resale_flat_prices.csv")
df.head()
#append
df['unique_add'] = df['block'] + ' ' + df['street_name']
df['unique_add']
#obtain unique addresses only
df['unique_add'].unique()
df= df[['unique_add']]
def latlon(sample_df_row):
base_url = "https://developers.onemap.sg/"
path= "/commonapi/search?searchVal={}&returnGeom={}&getAddrDetails={}".format(str(sample_df_row[0]),'Y','Y')
result= requests.get(base_url+path)
#   print(str(sample_df_row[0]))
#   print(result.json())
if result.json()['found'] >= 1:
x, y=  result.json()['results'][0]['LONGITUDE'],result.json()['results'][0]['LATITUDE']
else:
print(result.json())
x, y = 'NULL','NULL'
return x,y
df.loc[:,'Lat'], df.loc[:,'Lon']= zip(*df['unique_add'].apply(latlon))
View(df)
View(df)
View(df)
df.loc[:,'Lat'], df.loc[:,'Lon']= zip(*df['unique_add'].apply(latlon))
df.to_csv('unique_add_latlon.csv')
df = pd.read_csv("resale_flat_prices.csv")
df.info()
df.head()
#append
df['unique_add'] = df['block'] + ' ' + df['street_name']
df['unique_add']
View(df)
df['unique_add'] = df['block'] + ' ' + df['street_name']
unique_rows = df['unique_add']
View(unique_rows)
View(unique_rows)
unique_rows.head()
unique_rows.tail()
df = pd.read_csv('resale_flat_prices.csv')
#create unique_address column by concatenating block and street name
df['unique_add'] = df['block'] + ' ' + df['street_name']
# drop duplicates
df = df[['unique_add']].drop_duplicates()
print(len(df))
